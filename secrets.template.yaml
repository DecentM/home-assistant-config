# The Fully Qualified Domain Name of the Home Assistant instance
# Port only required if it's not the default port for the protocol
http_base_url: https://home-assistant.example.com:443
# true if HA is behind a reverse proxy, false if it's accessed directly.
use_x_forwarded_for:
# A list (or if one, a string) of IP addresses that can be trusted for the
# x-forwarded-for header
trusted_proxies:

# Physical location of the main user(s), in which the "Home" zone is usually
# located. Most of the time this is also the location Home Assistant is running
# in.
# Lat and Long numbers should be as precise as possible
home_lat: 0.0000000
home_long: 0.0000000
home_elevation: 00

# Use the "TZ Database name" column from here: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
home_timezone: Etc/GMT+0

# Same for the workplace
# Lat and Long numbers should be as precise as possible
work_lat: 0.0000000
work_long: 0.0000000

# https://hacs.xyz/docs/configuration/legacy
# GitHub PAT for API access
hacs_github_token: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# https://github.com/pinkywafer/Anniversaries
# Birthdays, etc... (format: MM-DD or YYYY-MM-DD)
anniversaries:
  - name: Some anniversary
    date: '12-31'

# https://www.home-assistant.io/integrations/waqi/
# Enter a location here
sensor_air_quality: London Westminster, United Kingdom

# https://www.home-assistant.io/integrations/withings/
# Withings sensors contain the profile name, so in secrets they go!
sensor_withings_systolic: withings_systolic_blood_pressure_mmhg_<profile name>
sensor_withings_diastolic: withings_diastolic_blood_pressure_mmhg_<profile name>
sensor_withings_weight: withings_weight_kg_<profile name>
sensor_withings_hydration: withings_hydration_<profile name>
sensor_withings_hr_avg: withings_sleep_heart_rate_average_bpm_<profile name>
sensor_withings_pulse: withings_heart_pulse_bpm_<profile name>

# https://www.home-assistant.io/integrations/workday/
# List: https://github.com/dr-prodigy/python-holidays#available-countries
# Tells whether or not a day is a working day, while taking national holidays
# into account.
workday_country: UnitedKingdom

# HA will log here instead of onto the potentially solid state disk
postgres_url: postgres://<username>:<password>@<host>:<port>/<database>

# https://www.home-assistant.io/integrations/roomba/
vacuum_host: your.vacuums.ip.address
vacuum_username:
vacuum_password:

# https://www.home-assistant.io/integrations/luci/
openwrt_host: your.routers.ip.address
openwrt_username:
openwrt_password:

# https://www.home-assistant.io/integrations/llamalab_automate/
# Superfancy JSON notifications
automate_service_name_phone: automate_myphone
automate_phone_name: myphone
automate_api_key:
automate_notify_to: your-mail@gmail.com

# You get this from Automate, follow the instructions on the bottom of the page
# here: https://www.home-assistant.io/integrations/llamalab_automate/#device
automate_notify_device: MyPHONE 00022
# Generate a random string of characters and put it here. Recommended length
# is 64 or above
# https://onlinerandomtools.com/generate-random-string
automate_webhook_id: random-string-here

# https://www.home-assistant.io/integrations/waqi/
waqi_token:
waqi_locations:
  - Xen/Bumvillage

# https://www.home-assistant.io/integrations/aftership/
aftership_api_key:

# https://www.home-assistant.io/integrations/darksky/
darksky_api_key:

# Custom integration that parses the Accuweather website for weather alerts and
# textual forecasts
accuweather_url:

# https://www.home-assistant.io/integrations/steam_online/
steam_web_api_key:
steam_accounts:
  - <64bit Steam id>
steam_account_sensors:
  - sensor.steam_<64bit Steam id>

# As the config is stored on GitHub, we can utilise its webhook functionality to
# let HA know there was an update.
# Generate a random string of characters and put it here. Recommended length
# is 64 or above
# https://onlinerandomtools.com/generate-random-string
github_webhook_id: random-string-here

# https://www.home-assistant.io/integrations/amazon_polly/
polly_key_id:
polly_access_key:
polly_region:

# https://www.home-assistant.io/integrations/withings/
withings_client_id:
withings_client_secret:

# https://github.com/custom-components/sensor.trakt
# Some scrobbling needs to be set up beforehand, so Trakt can know what shows it
# should track for upcoming episodes.
trakt_id:
trakt_secret:
trakt_username:

# https://www.home-assistant.io/integrations/openhardwaremonitor/
# Get fancy statistics about system load and temperatures from Windows hosts
# For Linux hosts I use the glances integration, which is configured through the
# UI (https://www.home-assistant.io/integrations/glances/)
windows_vm_host: your.windows.ip.address

# https://www.home-assistant.io/integrations/emby/
# The emby integration seems to work with both Emby and Jellyfin as the two
# projects share the same codebase. Jellyfin is the open source version of the
# once also open source Emby.
emby_host: your.jellyfin/emby.ip.address
emby_api_key:
emby_port: 8096
emby_ssl: false

# https://www.home-assistant.io/integrations/coronavirus
# Sensor names may contain sensitive info
sensor_country1_coronavirus_current:
sensor_country1_coronavirus_recovered:
sensor_country1_coronavirus_confirmed:
sensor_country1_coronavirus_deaths:

sensor_country2_coronavirus_current:
sensor_country2_coronavirus_recovered:
sensor_country2_coronavirus_confirmed:
sensor_country2_coronavirus_deaths:

# https://www.home-assistant.io/integrations/transmission/
transmission_host:
transmission_port:
transmission_username:
transmission_password:
