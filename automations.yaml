
- id: '1567711590412'
  alias: Autolight - All lights off when I leave home
  trigger:
  - entity_id: device_tracker.decentm_phone
    event: leave
    platform: zone
    zone: zone.home
  condition:
  - condition: state
    entity_id: group.all_lights
    state: 'on'
  action:
  - service: light.turn_off
    entity_id: group.all_lights
  - data:
      message: I turned off all lights because no presence was detected
    service: notify.notify

- id: '1572389331071'
  alias: Vacuum every weekday
  description: ''
  trigger:
  - at: '10:45'
    platform: time
  condition:
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  action:
  - service: vacuum.start_pause

- id: '1572392571470'
  alias: Notify - Service restart
  description: ''
  trigger:
  - event: start
    platform: homeassistant
  condition: []
  action:
  - data:
      message: Home Assistant startup complete
    service: notify.notify

- id: '1572486842669'
  alias: Notify - Weather every morning when all lights are off for 30 seconds
  description: ''
  trigger:
  - entity_id: group.all_lights
    for: 00:00:30
    from: 'on'
    platform: state
    to: 'off'
  condition:
  - after: 09:40
    before: '10:30'
    condition: time
  action:
  - data:
      message: "It is {{ state_attr(\"weather.dark_sky\", \"temperature\") }}C outside.\
        \  \n{% for  rainy_date in state_attr(\"weather.dark_sky\", \"forecast\")\
        \ | selectattr(\"condition\", \"eq\", \"rainy\") | map(attribute=\"datetime\"\
        ) %}Will rain at {{ rainy_date }}  \n{% endfor %}\n"
    service: notify.notify

- id: '1572953057355'
  alias: Notify - When vacuuming is successful
  description: ''
  trigger:
  - entity_id: vacuum.roomba
    from: 'on'
    platform: state
    to: 'off'
  condition:
  - condition: template
    value_template: '{{ state_attr(''vacuum.roomba'', ''status'') == ''Charging''
      }}'
  action:
  - data:
      message: Vacuuming successful
    service: notify.notify

- id: '1574507420087'
  alias: Notify - When vacuuming is cancelled
  description: ''
  trigger:
  - entity_id: vacuum.roomba
    from: 'on'
    platform: state
    to: 'off'
  condition:
  - condition: template
    value_template: '{{ state_attr(''vacuum.roomba'', ''status'') == ''User Docking''
      }}'
  action:
  - data:
      message: Roomba was asked to return to station
    service: notify.notify

- id: '1573340229472'
  alias: Notify - When camera battery gets hot or low
  description: ''
  trigger:
  - above: '40'
    entity_id: sensor.huawei_cam_battery_temperature
    platform: numeric_state
  - below: '40'
    entity_id: sensor.huawei_cam_battery_level
    platform: numeric_state
  condition: []
  action:
  - data:
      message: "Phone battery temperature at {{\nstates('sensor.huawei_cam_battery_temperature')\
        \ }}  \nPhone battery level at {{\nstates('sensor.huawei_cam_battery_level')\
        \ }}\n"
    service: notify.notify

- id: '1573346683220'
  alias: Turn night vision on in the dark
  description: ''
  trigger:
  - below: '2'
    entity_id: sensor.huawei_cam_light_level
    platform: numeric_state
  condition: []
  action:
  - data:
      state: 'on'
    service: rest_command.phone_nightvision

- id: '1573346721367'
  alias: Autolight - Turn night vision off when there is light
  description: ''
  trigger:
  - above: '1.9'
    entity_id: sensor.huawei_cam_light_level
    platform: numeric_state
  condition: []
  action:
  - data:
      state: 'off'
    service: rest_command.phone_nightvision

- id: '1573395934710'
  alias: Notify - Movement in the light when not at home
  description: Ignore when the roomba is running
  trigger:
  - above: '5'
    entity_id: sensor.huawei_cam_motion
    platform: numeric_state
  condition:
  - condition: template
    value_template: '{{ not is_state("device_tracker.decentm_phone", "home") }}'
  - condition: state
    entity_id: vacuum.roomba
    state: 'off'
  - above: '2'
    condition: numeric_state
    entity_id: sensor.huawei_cam_light_level
  action:
  - data:
      message: Movement detected
    service: notify.notify

- id: '1573397213229'
  alias: Autolight - Turn off kitchen light after movement stops
  description: ''
  trigger:
  - below: '7'
    entity_id: sensor.huawei_cam_motion
    for: 00:02:00
    platform: numeric_state
  condition:
  - condition: state
    entity_id: vacuum.roomba
    state: 'off'
  action:
  - data:
      entity_id: light.kitchen_wall
    service: light.turn_off

- id: '1573404396256'
  alias: Notify - When phone camera gets blocked
  description: ''
  trigger:
  - below: '1'
    entity_id: sensor.huawei_cam_proximity
    platform: numeric_state
  condition: []
  action:
  - data:
      message: Camera lens blocked, video feed may be unreliable
      title: Proximity detection triggered
    service: notify.notify

- id: '1573406912562'
  alias: Autolight - Kitchen on when movement in the dark
  description: ''
  trigger:
  - above: '10'
    entity_id: sensor.huawei_cam_motion
    for: 00:00:02
    platform: numeric_state
  condition:
  - below: '2'
    condition: numeric_state
    entity_id: sensor.huawei_cam_light_level
  - condition: state
    entity_id: group.all_lights
    state: 'off'
  action:
  - data:
      brightness: 20
      entity_id: light.kitchen_wall
    service: light.turn_on

- id: '1573408122350'
  alias: Autolight - Turn off kitchen light when light level is high
  description: ''
  trigger:
  - above: '1.9'
    entity_id: sensor.huawei_cam_light_level
    platform: numeric_state
  condition:
  - condition: state
    entity_id: light.kitchen_wall
    state: 'on'
  action:
  - data:
      entity_id: light.kitchen_wall
    service: light.turn_off

- id: '1573432729279'
  alias: Theme - Switch to dark on sunset
  description: ''
  trigger:
  - entity_id: sun.sun
    from: above_horizon
    platform: state
    to: below_horizon
  - event: start
    platform: homeassistant
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - data:
      name: midnight
    service: frontend.set_theme

- id: '1573432857247'
  alias: Theme - Switch to light on sunrise
  description: ''
  trigger:
  - entity_id: sun.sun
    from: below_horizon
    platform: state
    to: above_horizon
  - event: start
    platform: homeassistant
  condition:
  - condition: state
    entity_id: sun.sun
    state: above_horizon
  action:
  - data:
      name: default
    service: frontend.set_theme

- id: '1573773732089'
  alias: Notify - When vacuuming fails
  description: ''
  trigger:
  - entity_id: vacuum.roomba
    for: 00:01:00
    from: 'on'
    platform: state
    to: 'off'
  condition:
  - condition: template
    value_template: '{{ state_attr(''vacuum.roomba'', ''status'') == ''Stopped'' }}'
  action:
  - data:
      message: Vacuuming failed
    service: notify.notify

- id: '1573852140677'
  alias: Notify - Updates available
  description: ''
  trigger:
  - entity_id: binary_sensor.updater
    from: 'off'
    platform: state
    to: 'on'
  condition: []
  action:
  - data:
      message: An update is available!
    service: notify.notify

- id: '1574887631430'
  alias: Speak - Waking up in 10 hours
  description: ''
  trigger:
  - at: '23:00'
    platform: time
  condition:
  - condition: state
    entity_id: light.workstation
    state: 'on'
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - data:
      message: You're waking up in ten hours!
    service: notify.speak

- id: '1574791101524'
  alias: Speak - Waking up in 9 hours
  description: ''
  trigger:
  - at: 00:00
    platform: time
  condition:
  - condition: state
    entity_id: light.workstation
    state: 'on'
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - data:
      message: You're waking up in nine hours!
    service: notify.speak

- id: '1574471992197'
  alias: Speak - Waking up in 8 hours
  description: ''
  trigger:
  - at: 01:00
    platform: time
  condition:
  - condition: state
    entity_id: light.workstation
    state: 'on'
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - data:
      message: You're waking up in eight hours!
    service: notify.speak

- id: '1574472229361'
  alias: Speak - Waking up in 7 hours
  description: ''
  trigger:
  - at: 02:00
    platform: time
  condition:
  - condition: state
    entity_id: light.workstation
    state: 'on'
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - data:
      message: You're waking up in seven hours!
    service: notify.speak

- id: '1574472328826'
  alias: Speak - Waking up in 6 hours
  description: ''
  trigger:
  - at: 03:00
    platform: time
  condition:
  - condition: state
    entity_id: light.workstation
    state: 'on'
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - data:
      message: You're waking up in six hours!
    service: notify.speak

- id: '1574472347593'
  alias: Speak - Waking up in 5 hours
  description: ''
  trigger:
  - at: 04:00
    platform: time
  condition:
  - condition: state
    entity_id: light.workstation
    state: 'on'
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - data:
      message: You're waking up in five hours!
    service: notify.speak

- id: '1574507275863'
  alias: Notify - When vacuuming begins
  description: ''
  trigger:
  - entity_id: vacuum.roomba
    from: 'off'
    platform: state
    to: 'on'
  condition: []
  action:
  - data:
      message: Vacuuming started
    service: notify.notify

- id: '1574718566119'
  alias: Notify - When roomba is charging after being shut off
  description: ''
  trigger:
  - entity_id: vacuum.roomba
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - wait_template: '{{ state_attr(''vacuum.roomba'', ''status'') == ''Charging'' }}'
  - data:
      message: Roomba is now charging
    service: notify.notify

- id: '1578290286331'
  alias: Notify - When roomba bin is removed
  description: ''
  trigger:
  - platform: template
    value_template: '{{ state_attr(''vacuum.roomba'', ''bin_present'') == false }}'
  condition: []
  action:
  - data:
      message: Roomba bin removed
    service: notify.notify

- id: '1578290570856'
  alias: Notify - When roomba bin is inserted
  description: ''
  trigger:
  - platform: template
    value_template: '{{ state_attr(''vacuum.roomba'', ''bin_present'') == true }}'
  condition: []
  action:
  - data:
      message: Roomba bin inserted
    service: notify.notify
