- alias: Vacuum - Every weekday
  description: ''
  trigger:
  - at: '10:45'
    platform: time
  condition:
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: numeric_state
    entity_id: var.roomba_dirty_runs
    below: 5
  action:
  - service: vacuum.start_pause

- alias: Vacuum - Reset dirty runs counter after tray entry
  description: ''
  trigger:
  - platform: template
    value_template: '{{ state_attr(''vacuum.roomba'', ''bin_present'') == false }}'
  # The template would fire on startup when it gets roomba state for the first
  # time, so we check uptime.
  condition:
  - condition: numeric_state
    entity_id: sensor.uptime_minutes
    above: 1
  action:
  # Wait for the bin to be reinserted
  - wait_template: '{{ state_attr(''vacuum.roomba'', ''bin_present'') == true }}'
  - service: var.set
    data:
      entity_id: var.roomba_dirty_runs
      value: 0
  - service: tts.amazon_polly_say
    data:
      message: Roomba tray inserted.
      entity_id: media_player.huawei_cam

- alias: Vacuum - Confirm bin removal
  description: ''
  trigger:
  - platform: template
    value_template: '{{ state_attr(''vacuum.roomba'', ''bin_present'') == false }}'
  # The template would fire on startup when it gets roomba state for the first
  # time, so we check uptime.
  condition:
  - condition: numeric_state
    entity_id: sensor.uptime_minutes
    above: 1
  action:
  - service: tts.amazon_polly_say
    data:
      message: Roomba tray removed.
      entity_id: media_player.huawei_cam

- alias: Vacuum - Send Roomba back if started manually while not clean
  description: ''
  trigger:
  - platform: state
    entity_id: vacuum.roomba
    to: 'on'
  condition:
  - condition: numeric_state
    entity_id: var.roomba_dirty_runs
    above: 4
  action:
  - service: vacuum.start_pause
    entity_id: vacuum.roomba
  - delay: '00:00:02'
  - service: vacuum.return_to_base
    entity_id: vacuum.roomba
  - service: notify.notify
    data:
      message: Sending roomba back as it's not been cleaned.
  - service: tts.amazon_polly_say
    data:
      message: Roomba wasn't cleaned recently, returning to station.
      entity_id: media_player.huawei_cam

- alias: Vacuum - Increment dirty runs counter when roomba turns off
  description: ''
  trigger:
  - platform: state
    entity_id: vacuum.roomba
    from: 'on'
    to: 'off'
  action:
  - wait_template: '{{ state_attr(''vacuum.roomba'', ''status'') == ''Charging'' }}'
    continue_on_timeout: false
  - service: var.update
    entity_id: var.roomba_dirty_runs
