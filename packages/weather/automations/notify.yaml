- alias: Notify - Weather every morning when all lights are off for 30 seconds
  description: ''
  trigger:
  - entity_id: group.all_lights
    for: 00:00:30
    from: 'on'
    platform: state
    to: 'off'
  condition:
  - after: 09:40
    before: '10:30'
    condition: time
  action:
  - data:
      message: "It is {{ state_attr(\"weather.dark_sky\", \"temperature\") }}C outside.\
        \  \n{% for  rainy_date in state_attr(\"weather.dark_sky\", \"forecast\")\
        \ | selectattr(\"condition\", \"eq\", \"rainy\") | map(attribute=\"datetime\"\
        ) %}Will rain at {{ rainy_date }}  \n{% endfor %}\n"
    service: notify.notify

- alias: Notify - Updates available
  description: ''
  trigger:
  - entity_id: binary_sensor.updater
    from: 'off'
    platform: state
    to: 'on'
  condition: []
  action:
  - data:
      message: An update is available!
    service: notify.notify
